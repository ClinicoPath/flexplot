require(tidyverse)
require(cowplot)
#### simulate random data
set.seed(1)
esteem = c(rnorm(10, 2, 2), rnorm(5, 2.5, .5), rnorm(5, 7, .5))
groups = sort(rep(c("Neutral", "Violent"), times=10))
d = data.frame(esteem=esteem, groups=groups)
p = ggplot(data=d, mapping=aes(x=groups, y=esteem))
require(ggplot2)
require(cowplot)
#### simulate random data
set.seed(1)
esteem = c(rnorm(10, 2, 2), rnorm(5, 2.5, .5), rnorm(5, 7, .5))
groups = sort(rep(c("Neutral", "Violent"), times=10))
d = data.frame(esteem=esteem, groups=groups)
p = ggplot(data=d, mapping=aes(x=groups, y=esteem))
p1 = p + stat_summary(fun.y="mean", geom="point", size=2, color="black") +
stat_summary(aes(x=groups, y=esteem), geom="errorbar", fun.data="mean_sdl",
fun.args=list(mult=1), size=1, color="black", alpha = .5, width=.1) +
labs(x="", y="Aggression") + theme_bw(base_family="Times")
p2 = p + geom_jitter(width=.1, alpha=.7,shape=1) + stat_summary(fun.y="mean", geom="point", size=2, color="black") +
stat_summary(aes(x=groups, y=esteem), geom="errorbar", fun.data="mean_sdl",
fun.args=list(mult=1), size=1, color="black", alpha = .15, width=.1) +
labs(x="", y="Aggression") + theme_bw(base_family="Times")
plot_grid(p1, p2, labels = "", hjust=0)
#### simulate random data
set.seed(2)
groups = sort(rep(c("Neutral", "Violent"), times=10))
groups.num = as.numeric(as.factor(groups))
empathy = rnorm(length(groups), 10, 2.5)
aggression = 30 +-1.9*empathy + groups.num + .8*groups.num*(empathy) + rnorm(length(empathy), 0, 2)
theme_set(theme_bw())
d = data.frame(groups=groups, empathy=empathy, aggression=aggression)
regression = ggplot(d[d$groups=="Neutral",], aes(x=empathy, y=aggression)) + theme_bw() +
geom_point() + geom_smooth(method="lm", se=F)
ggsave(plot=regression, "plots/regression.pdf")
mod = lm(aggression~empathy, data=d)
d$fitted = fitted(mod)
d$residuals = residuals(mod)
res.dep.plot = ggplot(d, aes(x=fitted, y=residuals)) + geom_point() + theme_bw() + geom_line(stat="smooth", method="loess", alpha=.2)
ggsave(plot=res.dep.plot, "plots/resdepplot.pdf")
ancova = ggplot(d, aes(x=empathy, y=aggression)) + theme_bw() +
geom_smooth(method="lm", aes(x=empathy, y=aggression, col=groups), se=F) +
geom_point(aes(x=empathy, y=aggression, shape=groups)) +
scale_color_manual(values=c(rgb(0,0,0,.25), rgb(0,0,0))) +
guides(color = guide_legend(override.aes = list(linetype = 0)))
ggsave(plot=ancova, "plots/ancova.pdf")
ttest = ggplot(d, aes(x=groups, y=aggression)) + theme_bw() +
geom_boxplot(width = .5, alpha=.5) + geom_jitter(width=.2)
ggsave(plot=p2, "plots/ttest.pdf")
#### coplot
require(MASS)
require(fifer)
d = data.frame(mvrnorm(100, mu=c(1, 1), Sigma=matrix(c(1, .3, .3, 1), nrow=2)))
names(d) = c("x", "z")
d$y = .3*d$z + .3*d$x + -.4*d$z*d$z + rnorm(100, 0, .4)
pdf("plots/coplot.pdf")
par1()
#### simulate random data
set.seed(2)
groups = sort(rep(c("Neutral", "Violent"), times=10))
groups.num = as.numeric(as.factor(groups))
empathy = rnorm(length(groups), 10, 2.5)
aggression = 30 +-1.9*empathy + groups.num + .8*groups.num*(empathy) + rnorm(length(empathy), 0, 2)
theme_set(theme_bw())
d = data.frame(groups=groups, empathy=empathy, aggression=aggression)
regression = ggplot(d[d$groups=="Neutral",], aes(x=empathy, y=aggression)) + theme_bw() +
geom_point() + geom_smooth(method="lm", se=F)
ggsave(plot=regression, "plots/regression.pdf")
mod = lm(aggression~empathy, data=d)
d$fitted = fitted(mod)
d$residuals = residuals(mod)
res.dep.plot = ggplot(d, aes(x=fitted, y=residuals)) + geom_point() + theme_bw() + geom_line(stat="smooth", method="loess", alpha=.2)
ggsave(plot=res.dep.plot, "plots/resdepplot.pdf")
ancova = ggplot(d, aes(x=empathy, y=aggression)) + theme_bw() +
geom_smooth(method="lm", aes(x=empathy, y=aggression, col=groups), se=F) +
geom_point(aes(x=empathy, y=aggression, shape=groups)) +
scale_color_manual(values=c(rgb(0,0,0,.25), rgb(0,0,0))) +
guides(color = guide_legend(override.aes = list(linetype = 0)))
ggsave(plot=ancova, "plots/ancova.pdf")
ttest = ggplot(d, aes(x=groups, y=aggression)) + theme_bw() +
geom_boxplot(width = .5, alpha=.5) + geom_jitter(width=.2)
ggsave(plot=p2, "plots/ttest.pdf")
#### coplot
require(MASS)
require(fifer)
d = data.frame(mvrnorm(100, mu=c(1, 1), Sigma=matrix(c(1, .3, .3, 1), nrow=2)))
names(d) = c("x", "z")
d$y = .3*d$z + .3*d$x + -.4*d$z*d$z + rnorm(100, 0, .4)
pdf("plots/coplot.pdf")
#par1()
coplot(y~x|z, data=d, panel=panel.smooth, xlab=c("", ""), ylab="")
junhk = dev.off()
#### factorial anova
condition1 = 1:3
condition2 = 1:3
times = 1:10
d = expand.grid(condition1, condition2, times)
names(d) = c("Condition", "SES", "Time")
d$Score = 10 + condition1 + condition2 + .2*condition1*condition2 + rnorm(nrow(d), 0, 2.5)
d$Condition = factor(d$Condition, levels=1:3, labels=c("Control", "Treatment A", "Treatment B"))
d$SES = factor(d$SES, levels=1:3, labels=c("Low", "Mid", "High"))
st.err = function(x){
sd(x)/sqrt(length(x))
}
m = aggregate(Score~Condition + SES, FUN=mean, data=d)
m$upper = m$Score + aggregate(Score~Condition + SES, FUN=st.err, data=d)$Score
m$lower = m$Score - aggregate(Score~Condition + SES, FUN=st.err, data=d)$Score
dotplot = ggplot(m, aes(Score, SES))
dotplot = dotplot + geom_point() + geom_errorbarh(aes(xmin=lower, xmax=upper), height=.050) +
geom_jitter(data=d, aes(Score, SES), alpha=.2, width=.1)+
facet_wrap(~Condition, ncol=1)
ggsave(plot=dotplot, "plots/dotplot.pdf")
#### chisquare plot
tab = data.frame(matrix(c("Y", "Y", "Y", "N", "N", "Y", "N", "N"), nrow=4, byrow=2))
#names(tab) = c("Child Smoke", "Parent Smoke")
tab.new = rbind(matrix(rep(c("Y", "Y"), times=111), ncol=2),
matrix(rep(c("Y", "N"), times=11), ncol=2),
matrix(rep(c("N", "Y"), times=95), ncol=2),
matrix(rep(c("N", "N"), times=743), ncol=2))
tab.new = data.frame(tab.new)
names(tab.new) = c("Child.Smoke", "Parent.Smoke")
ddd = chisq.test(table(tab.new))
t = ddd$observed-ddd$expected
t = data.frame(t)
names(t)[3] = c("Difference")
chisq = ggplot(t, aes(Child.Smoke, Difference)) +
theme_bw() +
geom_bar(position="dodge", stat="identity") +
facet_wrap(~Parent.Smoke, labeller = label_both) +
labs(x="Child Smokes", y="Difference Between Observed and Expected")
ggsave(plot=chisq, "plots/chisq.pdf")
d = read.csv("../data/nsduh_ninsteps.csv")
d$health.rating = factor(d$health.rating, levels=c("poor", "fair", "good", "very good", "excellent"), ordered=T)
#### rename variables
names(d)[names(d)=="k6.psych.dist"] = "distress"
names(d)[names(d)=="smipp.prob.MI"] = "MI"
#### subset to those with nonmissing values (CHANGE LATER)
original = d
d = d[-which(is.na(d$health.rating)),]
#### create drugs variable
m = d
m$drugs = "no";
m$drugs[d[,"her.rec"]=="past 30 days" | d[,"her.rec"] == ">30 < 12 mo"] = "yes"
##### subset to only drug users
m = subset(m, drugs=="yes")
#### rename
#### final model to test: those in good health can mitigate the psychological distress of heroin
#### idea: those who do drugs will have more distress, which will do more drugs. To break cycle, do exercise therapy. That will reduce stress and make them more likely to break the cycle
#### the model actually suggests those HIGH in health have MORE distress (for the heroin users)
mod = (lm(distress~health.rating + MI, data=m))
effect = papaja::apa_print(anova(mod))
mi = ggplot(data=m, aes(MI)) + geom_histogram(fill="lightgray", col="black", bins=30) + theme_bw() + labs(x="Probability of Mental Illness")
hr = ggplot(data=m, aes(health.rating)) + geom_bar(fill="lightgray", col="black") + theme_bw() + labs(x="Health Rating") + coord_flip()
distress = ggplot(data=m, aes(distress)) + geom_bar(fill="lightgray", col="black") + theme_bw() + labs(x="Psychological Distress")
plot_grid(mi, hr, distress)
#require(gridExtra)
#grid.arrange(mi, hr, distress, n)
a = added.plot(MI~distress | health.rating)
a = flexplot::added.plot(MI~distress | health.rating)
a = flexplot::added.plot(MI~distress | health.rating, data=m)
b = flexplot(MI~distress | health.rating, data=m)
a = flexplot::added.plot(MI~distress | health.rating, data=m)
b = flexplot::flexplot(MI~distress | health.rating, data=m)
plot_grid(a,b)
a = flexplot::added.plot(MI~distress | health.rating, data=m)
b = flexplot(MI~distress | health.rating, data=m, se=F)
a = flexplot::added.plot(MI~distress | health.rating, data=m)
b = flexplot::flexplot(MI~distress | health.rating, data=m, se=F)
plot_grid(a,b)
a = flexplot::added.plot(MI~distress | health.rating, data=m)
b = flexplot::flexplot(MI~distress | health.rating, data=m, se=F)
plot_grid(a,b)
a = flexplot::added.plot(MI~distress | health.rating + heroin, data=m)
a = flexplot::added.plot(MI~distress | health.rating, data=m)
b = flexplot::flexplot(MI~distress | health.rating, data=m, se=F)
plot_grid(a,b)
##### STEP 4
m$residuals = residuals(mod)
m$fitted = fitted(mod)
res.dep = ggplot(data=m, aes(x=fitted, y=residuals)) + geom_point() + geom_smooth() + theme_bw() + labs(x="Fitted", y="Residuals")
hist = ggplot(data=m, aes(x=residuals)) + geom_histogram(col="black", fill="white", bins=20) + theme_bw()
plot_grid(res.dep, hist)
m2 = m
m2$health.rating[m2$health.rating=="poor"] = "fair"
m2$health.rating[m2$health.rating=="excellent"] = "very good"
m2$distress = factor(m2$distress)
m2$health.rating = factor(m2$health.rating)
mod_pol = polr(distress~MI * health.rating, data=m2)
##### generate predictions
newdata = expand.grid(MI=seq(from=0, to=1, length.out=100), health.rating=unique(m2$health.rating))
newdata$fitted = as.numeric(as.character(predict(mod_pol, newdata=newdata, type="class")))
m2$distress = as.numeric(as.character(m$distress))
##### plot predictions
three_polr = ggplot(data=newdata, aes(x=MI, y=fitted))+
geom_line() +
geom_point(data=m2, aes(x=MI, y=distress), alpha=.5) +
facet_wrap(~health.rating, nrow=1) +
theme_bw()+
guides(shape=FALSE, linetype=F) +
labs(y="Psychological Distress", x="Probability of Mental Illness", title = "Ordered Logistic Regression Model")
m3 = subset(m2, MI<.1)
k2 = aggregate(distress~health.rating, data=m3, FUN=quantile, probs=.5)
k2$lower = aggregate(distress~health.rating , data=m3, FUN=quantile, probs=.25)$distress
k2$upper = aggregate(distress~health.rating, data=m3, FUN=quantile, probs=.75)$distress
median = ggplot(data=k2, aes(x=health.rating, y=distress))+
geom_point() +
geom_errorbar(aes(ymin=lower, ymax=upper), width=.050) +
geom_jitter(data=m3, aes(x=health.rating, y=distress), alpha=.1, width=.1) +
theme_bw() +
labs(x="Health Rating", y="Psychological Distress", title="Non-parametric Model")
plot_grid(three_polr, median, nrow=2)
report = paste0(k2$distress[1], ", ", k2$distress[2], ", and ", k2$distress[3])
anchors = predict(mod_pol, list(MI=c(.5, .5), health.rating = c("fair", "good")), "class")
anchors2 = predict(mod_pol, list(MI=c(.25, .25), health.rating = c("fair", "good")), "class")
?facet_grid
b = flexplot::flexplot(MI~distress | health.rating, data=m, se=F) + facet_grid(~health.rating)
plot_grid(a,b)
require(ggplot2)
require(cowplot)
#### simulate random data
set.seed(1)
esteem = c(rnorm(10, 2, 2), rnorm(5, 2.5, .5), rnorm(5, 7, .5))
groups = sort(rep(c("Neutral", "Violent"), times=10))
d = data.frame(esteem=esteem, groups=groups)
p = ggplot(data=d, mapping=aes(x=groups, y=esteem))
p1 = p + stat_summary(fun.y="mean", geom="point", size=2, color="black") +
stat_summary(aes(x=groups, y=esteem), geom="errorbar", fun.data="mean_sdl",
fun.args=list(mult=1), size=1, color="black", alpha = .5, width=.1) +
labs(x="", y="Aggression") + theme_bw(base_family="Times")
p2 = p + geom_jitter(width=.1, alpha=.7,shape=1) + stat_summary(fun.y="mean", geom="point", size=2, color="black") +
stat_summary(aes(x=groups, y=esteem), geom="errorbar", fun.data="mean_sdl",
fun.args=list(mult=1), size=1, color="black", alpha = .15, width=.1) +
labs(x="", y="Aggression") + theme_bw(base_family="Times")
plot_grid(p1, p2, labels = "", hjust=0)
#### simulate random data
set.seed(2)
groups = sort(rep(c("Neutral", "Violent"), times=10))
groups.num = as.numeric(as.factor(groups))
empathy = rnorm(length(groups), 10, 2.5)
aggression = 30 +-1.9*empathy + groups.num + .8*groups.num*(empathy) + rnorm(length(empathy), 0, 2)
theme_set(theme_bw())
d = data.frame(groups=groups, empathy=empathy, aggression=aggression)
regression = ggplot(d[d$groups=="Neutral",], aes(x=empathy, y=aggression)) + theme_bw() +
geom_point() + geom_smooth(method="lm", se=F)
ggsave(plot=regression, "plots/regression.pdf")
mod = lm(aggression~empathy, data=d)
d$fitted = fitted(mod)
d$residuals = residuals(mod)
res.dep.plot = ggplot(d, aes(x=fitted, y=residuals)) + geom_point() + theme_bw() + geom_line(stat="smooth", method="loess", alpha=.2)
ggsave(plot=res.dep.plot, "plots/resdepplot.pdf")
ancova = ggplot(d, aes(x=empathy, y=aggression)) + theme_bw() +
geom_smooth(method="lm", aes(x=empathy, y=aggression, col=groups), se=F) +
geom_point(aes(x=empathy, y=aggression, shape=groups)) +
scale_color_manual(values=c(rgb(0,0,0,.25), rgb(0,0,0))) +
guides(color = guide_legend(override.aes = list(linetype = 0)))
ggsave(plot=ancova, "plots/ancova.pdf")
ttest = ggplot(d, aes(x=groups, y=aggression)) + theme_bw() +
geom_boxplot(width = .5, alpha=.5) + geom_jitter(width=.2)
ggsave(plot=p2, "plots/ttest.pdf")
#### coplot
require(MASS)
require(fifer)
d = data.frame(mvrnorm(100, mu=c(1, 1), Sigma=matrix(c(1, .3, .3, 1), nrow=2)))
names(d) = c("x", "z")
d$y = .3*d$z + .3*d$x + -.4*d$z*d$z + rnorm(100, 0, .4)
pdf("plots/coplot.pdf")
#par1()
coplot(y~x|z, data=d, panel=panel.smooth, xlab=c("", ""), ylab="")
junhk = dev.off()
#### factorial anova
condition1 = 1:3
condition2 = 1:3
times = 1:10
d = expand.grid(condition1, condition2, times)
names(d) = c("Condition", "SES", "Time")
d$Score = 10 + condition1 + condition2 + .2*condition1*condition2 + rnorm(nrow(d), 0, 2.5)
d$Condition = factor(d$Condition, levels=1:3, labels=c("Control", "Treatment A", "Treatment B"))
d$SES = factor(d$SES, levels=1:3, labels=c("Low", "Mid", "High"))
st.err = function(x){
sd(x)/sqrt(length(x))
}
m = aggregate(Score~Condition + SES, FUN=mean, data=d)
m$upper = m$Score + aggregate(Score~Condition + SES, FUN=st.err, data=d)$Score
m$lower = m$Score - aggregate(Score~Condition + SES, FUN=st.err, data=d)$Score
dotplot = ggplot(m, aes(Score, SES))
dotplot = dotplot + geom_point() + geom_errorbarh(aes(xmin=lower, xmax=upper), height=.050) +
geom_jitter(data=d, aes(Score, SES), alpha=.2, width=.1)+
facet_wrap(~Condition, ncol=1)
ggsave(plot=dotplot, "plots/dotplot.pdf")
#### chisquare plot
tab = data.frame(matrix(c("Y", "Y", "Y", "N", "N", "Y", "N", "N"), nrow=4, byrow=2))
#names(tab) = c("Child Smoke", "Parent Smoke")
tab.new = rbind(matrix(rep(c("Y", "Y"), times=111), ncol=2),
matrix(rep(c("Y", "N"), times=11), ncol=2),
matrix(rep(c("N", "Y"), times=95), ncol=2),
matrix(rep(c("N", "N"), times=743), ncol=2))
tab.new = data.frame(tab.new)
names(tab.new) = c("Child.Smoke", "Parent.Smoke")
ddd = chisq.test(table(tab.new))
t = ddd$observed-ddd$expected
t = data.frame(t)
names(t)[3] = c("Difference")
chisq = ggplot(t, aes(Child.Smoke, Difference)) +
theme_bw() +
geom_bar(position="dodge", stat="identity") +
facet_wrap(~Parent.Smoke, labeller = label_both) +
labs(x="Child Smokes", y="Difference Between Observed and Expected")
ggsave(plot=chisq, "plots/chisq.pdf")
d = read.csv("../data/nsduh_ninsteps.csv")
d$health.rating = factor(d$health.rating, levels=c("poor", "fair", "good", "very good", "excellent"), ordered=T)
#### rename variables
names(d)[names(d)=="k6.psych.dist"] = "distress"
names(d)[names(d)=="smipp.prob.MI"] = "MI"
#### subset to those with nonmissing values (CHANGE LATER)
original = d
d = d[-which(is.na(d$health.rating)),]
#### create drugs variable
m = d
m$drugs = "no";
m$drugs[d[,"her.rec"]=="past 30 days" | d[,"her.rec"] == ">30 < 12 mo"] = "yes"
##### subset to only drug users
m = subset(m, drugs=="yes")
#### rename
#### final model to test: those in good health can mitigate the psychological distress of heroin
#### idea: those who do drugs will have more distress, which will do more drugs. To break cycle, do exercise therapy. That will reduce stress and make them more likely to break the cycle
#### the model actually suggests those HIGH in health have MORE distress (for the heroin users)
mod = (lm(distress~health.rating + MI, data=m))
effect = papaja::apa_print(anova(mod))
source('~/.active-rstudio-document', echo=TRUE)
